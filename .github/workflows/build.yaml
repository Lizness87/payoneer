name: Build 
on:
  push:
    branches:
      - 'main'

jobs:
  push-image-to-docker-hub:  # job name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # This is a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.repo_name }}/${{ secrets.DOCKERHUB_USERNAME }}:latest  
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ github.repository }}:${{ steps.vars.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  Deploy: # job name
    needs: push-image-to-docker-hub
    runs-on: ubuntu-latest   
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - name: checkout
      uses: actions/checkout@v1
      # Runs a set of commands using the runners shell
    - name: deploy source-code
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        source: "*"
        target: "tmp/counter-service"
    - name: run remote ssh commands to install helm 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        port: 22
        script: |
          cd /tmp/counter-service
          helm install counter-service ./counter-chart

