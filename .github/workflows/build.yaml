name: Build 
on:
  push:
    branches:
      - 'main'

jobs:
  push-image-to-docker-hub:  # job name
    runs-on: ubuntu-latest  # runner name : (ubuntu latest version) 
    steps:
    - name: Checkout # first action : checkout source code
      uses: actions/checkout@v2 
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx # set up docker buildx to push the image
      uses: docker/setup-buildx-action@v1     
    - name: Docker meta # generate sanitized tags
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.repo_name }} 
        tags: latest  
    - name: Build and push
      uses: docker/build-push-action@v2 # build and push the image
      with:
        context: .
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.repo_name }}:latest:buildcache #use caching to reduce the build time
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.repo_name }}:latest:buildcache,mode=max
  Deploy: # job name
    needs: push-image-to-docker-hub
    runs-on: ubuntu-latest   
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - name: checkout
      uses: actions/checkout@v1
      # Runs a set of commands using the runners shell
    - name: deploy source-code
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        source: "*"
        target: "tmp/counter-service"
    - name: run remote ssh commands to install helm 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        port: 22
        script: |
          cd /tmp/counter-service
          helm install counter-service ./counter-chart

